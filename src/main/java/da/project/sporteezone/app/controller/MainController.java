package da.project.sporteezone.app.controller;

import com.squareup.okhttp.OkHttpClient;
import da.project.sporteezone.app.entity.Data;
import da.project.sporteezone.app.repository.RateRepository;
import da.project.sporteezone.app.service.ApiCall;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;


import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import java.io.IOException;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;


@Controller // This means that this class is a Controller
//@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    //private FitnessRepository fitnessRepository;
    private RateRepository rateRepository;

    private final OkHttpClient client = new OkHttpClient();


    //@Autowired
    //private final OkHttpClient client;

    //@Autowired
    private ApiCall call = new ApiCall();


    public MainController(RateRepository rateRepository, ApiCall call) {
        this.rateRepository = rateRepository;
        this.call = call;
    }

    @RequestMapping("/")
    public ModelAndView showRate() throws IOException {
        Data rateToSave = call.doGetRequest("https://coinmate.io/api/ticker?currencyPair=BTC_CZK");
        if (rateRepository.findByDate(rateToSave.getDate()) == null) {
            rateRepository.save(rateToSave);
        }
        ModelAndView dataHolder = new ModelAndView("index");
        //List<Data> listRates = rateRepository.findFirst7ByDate("2020-09-09");
        Iterable<Data> listRates = rateRepository.findAll();
        List<Data> result = StreamSupport.stream(listRates.spliterator(), false)
            .collect(Collectors.toList());
        result = result.subList(0, 7);

        dataHolder.addObject("actualRate", rateToSave);
        dataHolder.addObject("rateHistory", result);
        return dataHolder;

    }


    /*
    @RequestMapping("/message")
    public ModelAndView showMessage() {
        ModelAndView dataHolder = new ModelAndView("index");
        dataHolder.addObject("msg", "hlásí se aplikace Sporteezone");
        dataHolder.addObject("fitko", rateRepository.findByDate("2020-07-03"));
        return dataHolder;
    }
    */


    /*
    podobné API jako to, kam se budou posílat cvičení
    @PostMapping(path = "/add", consumes = "application/json") // Map ONLY POST Requests
    public @ResponseBody
    String addNewUser(@RequestBody Fitness user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        System.out.println("jsem tady");
        System.out.println(user);
        fitnessRepository.save(user);
        return "Saved";
    }
     */

    @GetMapping(path = "/greeting")
    public @ResponseBody
    String greet() {
        return "hello world";
    }

    @PostMapping(path = "/findOne/{id}")
    public @ResponseBody
    Optional<Data> getOneUser(@PathVariable Integer id) {
        return rateRepository.findById(id);
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Data> getAllUsers() {
        return rateRepository.findAll();
    }
}

